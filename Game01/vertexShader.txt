#version 400 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoord;
layout (location = 2) in vec3 aNormal;

out vec2 TexCoord;
out vec3 surfaceNormal;
out vec3 toLightSource;

uniform mat4 model_matrix;
uniform mat4 view_matrix;
uniform mat4 projection_matrix;
uniform vec3 light_position;

void main()
{
	vec4 worldPosition = model_matrix * vec4(aPos.x, aPos.y, aPos.z, 1.0);
    gl_Position = projection_matrix * view_matrix * worldPosition;

	TexCoord = aTexCoord;

	surfaceNormal = (model_matrix * vec4(aNormal, 0.0)).xyz;
	toLightSource = light_position - worldPosition.xyz;
}